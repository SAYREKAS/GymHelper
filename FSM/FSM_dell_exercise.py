from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext

from db import exercise, db
from FSM.FSM_Dataclasses import DellExerciseState
from keyboards.reply import ReplyKb, create_reply_kbs

FSM_dell_exercise = Router()


@FSM_dell_exercise.message(StateFilter(None), F.text == 'üóë–í–∏–¥–∞–ª–∏—Ç–∏ –≤–ø—Ä–∞–≤—É')
async def func(message: Message, state: FSMContext):
    await state.set_state(DellExerciseState.muscle_group_name)
    ex = exercise.get_user_exercises(user_id=message.chat.id)
    if ex:
        await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å –≥—Ä—É–ø—É –º º—è–∑—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤–ø—Ä–∞–≤–∏',
                             reply_markup=create_reply_kbs(ex, additional_btn=['üö´–í—ñ–¥–º—ñ–Ω–∏—Ç–∏']))
    else:
        await message.answer("–©–µ –Ω–µ –¥–æ–¥–∞–Ω–æ –∂–æ–¥–Ω–æ—ó –≤–ø—Ä–∞–≤–∏", reply_markup=ReplyKb.main_menu)
        await state.clear()


@FSM_dell_exercise.message(DellExerciseState.muscle_group_name, F.text)
async def func(message: Message, state: FSMContext):
    if message.text not in db.get_muscle_groups():
        await message.answer(f"–ì—Ä—É–ø–∏ –º º—è–∑—ñ–≤  '{message.text}' –Ω–µ —ñ—Å–Ω—É—î.", reply_markup=ReplyKb.main_menu)
        await state.clear()
    else:
        await state.update_data(muscle_group_name=message.text)
        ex = exercise.get_user_exercises(user_id=message.chat.id)
        await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å –Ω–∞–∑–≤—É –≤–ø—Ä–∞–≤–∏ —è–∫—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–¥–∞–ª–∏—Ç–∏',
                             reply_markup=create_reply_kbs(ex[message.text], additional_btn=['üö´–í—ñ–¥–º—ñ–Ω–∏—Ç–∏']))
        await state.set_state(DellExerciseState.exercise_name)


@FSM_dell_exercise.message(DellExerciseState.exercise_name, F.text)
async def func(message: Message, state: FSMContext):
    if not exercise.exercise_exists(message.text):
        await message.answer(f"–í–ø—Ä–∞–≤–∏ '{message.text}' –Ω–µ —ñ—Å–Ω—É—î.", reply_markup=ReplyKb.main_menu)
        await state.clear()
    else:
        await state.update_data(exercise_name=message.text)
        data = await state.get_data()
        await state.clear()
        try:
            exercise.delete_user_exercise(user_id=message.from_user.id,
                                          muscle_group_name=data['muscle_group_name'],
                                          exercise_name=data['exercise_name'])
            await message.answer(f"–í–ø—Ä–∞–≤—É {data['exercise_name']} —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ!", reply_markup=ReplyKb.main_menu)

        except Exception as e:
            print(e)
            await state.update_data(exercise_name=message.text)
            await message.answer(f"–í–ø—Ä–∞–≤–∏ {data['exercise_name']} –≤ –≥—Ä—É–ø—ñ {data['muscle_group_name']} –Ω–µ —ñ—Å–Ω—É—î",
                                 reply_markup=ReplyKb.main_menu)
