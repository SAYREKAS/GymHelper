from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext

from database.core import gh
from FSM.common_functions import is_number
from FSM.FSM_Dataclasses import DellExerciseState
from keyboards.reply import ReplyKb, create_reply_kbs

FSM_dell_exercise = Router()


# —Ä–µ–∞–∫—Ü—ñ—è –Ω–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫—ñ 'üóë–í–∏–¥–∞–ª–∏—Ç–∏ –≤–ø—Ä–∞–≤—É'______________________________________________________________________
@FSM_dell_exercise.message(StateFilter(None), F.text == 'üóë–í–∏–¥–∞–ª–∏—Ç–∏ –≤–ø—Ä–∞–≤—É')
async def func(message: Message, state: FSMContext):
    ex = gh.get_user_exercises(user_id=message.chat.id)
    if ex:
        await state.set_state(DellExerciseState.muscle_group_name)
        await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å –≥—Ä—É–ø—É –º º—è–∑—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤–ø—Ä–∞–≤–∏',
                             reply_markup=create_reply_kbs(ex, additional_btn=['üö´–í—ñ–¥–º—ñ–Ω–∏—Ç–∏']))
    else:
        await message.answer("–©–µ –Ω–µ –¥–æ–¥–∞–Ω–æ –∂–æ–¥–Ω–æ—ó –≤–ø—Ä–∞–≤–∏", reply_markup=ReplyKb.main_menu)


# –≤–∏–±—ñ—Ä –≥—Ä—É–ø–∏ –º º—è–∑—ñ–≤____________________________________________________________________________________________________
@FSM_dell_exercise.message(DellExerciseState.muscle_group_name, F.text)
async def func(message: Message, state: FSMContext):
    ex = gh.get_user_exercises(user_id=message.chat.id)

    if message.text in ex:
        await state.update_data(muscle_group=message.text)
        await state.set_state(DellExerciseState.exercise_name)
        await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å –Ω–∞–∑–≤—É –≤–ø—Ä–∞–≤–∏ —è–∫—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–¥–∞–ª–∏—Ç–∏',
                             reply_markup=create_reply_kbs(ex[message.text], additional_btn=['üö´–í—ñ–¥–º—ñ–Ω–∏—Ç–∏']))
    else:
        await message.answer(f"–ì—Ä—É–ø–∏ –º º—è–∑—ñ–≤  '{message.text}' –Ω–µ —ñ—Å–Ω—É—î.",
                             reply_markup=create_reply_kbs(ex, additional_btn=['üö´–í—ñ–¥–º—ñ–Ω–∏—Ç–∏']))


# # –≤–∏–±—ñ—Ä –Ω–∞–∑–≤–∏ –≤–ø—Ä–∞–≤–∏__________________________________________________________________________________________________
@FSM_dell_exercise.message(DellExerciseState.exercise_name, F.text)
async def func(message: Message, state: FSMContext):
    ex = gh.get_user_exercises(user_id=message.chat.id)
    data = await state.get_data()

    if message.text in ex[data['muscle_group']]:
        await state.update_data(exercise=message.text)
        data = await state.get_data()
        await state.clear()
        await message.answer(gh.delete_user_exercise(user_id=message.chat.id,
                                                     muscle_group_name=data['muscle_group'],
                                                     exercise_name=data['exercise']),
                             reply_markup=ReplyKb.main_menu)
    else:
        await message.answer('–ø–æ–º–∏–ª–∫–∞', reply_markup=create_reply_kbs(ex[data['muscle_group']],
                                                                      additional_btn=['üö´–í—ñ–¥–º—ñ–Ω–∏—Ç–∏']))
