from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove

from database.core import gh
from keyboards.reply import ReplyKb
from FSM.common_functions import is_number

from FSM.FSM_Dataclasses import UserDetailsState

FSM_user_details = Router()


# –†–µ–∞–∫—Ü—ñ—è –Ω–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–ª–∞–≤—ñ—à—ñ '–í–∫–∞–∑–∞—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç—ñ–ª–∞'________________________________________________________________
@FSM_user_details.message(StateFilter(None), F.text == '–í–∫–∞–∑–∞—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç—ñ–ª–∞')
async def func(message: Message, state: FSMContext):
    await state.set_state(UserDetailsState.weight)
    await message.answer('–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –≤–∞–≥—É –∫–≥:', reply_markup=ReplyKeyboardRemove())


# –º–µ–Ω—é –≤–≤–µ–¥–µ–Ω–Ω—è –≤–∞–≥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞________________________________________________________________________________________
@FSM_user_details.message(UserDetailsState.weight, F.text)
async def func(message: Message, state: FSMContext):
    if is_number(message.text):
        await state.update_data(weight=message.text)
        await state.set_state(UserDetailsState.age)
        await message.answer('–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –≤—ñ–∫')
    else:
        await message.answer('–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏')


# –º–µ–Ω—é –≤–≤–µ–¥–µ–Ω–Ω—è –≤—ñ–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞________________________________________________________________________________________
@FSM_user_details.message(UserDetailsState.age, F.text)
async def func(message: Message, state: FSMContext):
    if is_number(message.text):
        await state.update_data(age=message.text)
        await state.set_state(UserDetailsState.tall)
        await message.answer('–í–≤–µ–¥—ñ—Ç—å –≤–∞—à —Ä—ñ—Å—Ç –≤ —Å–º.')
    else:
        await message.answer('–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏')


# –º–µ–Ω—é –≤–≤–µ–¥–µ–Ω–Ω—è —Ä–æ—Å—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞_______________________________________________________________________________________
@FSM_user_details.message(UserDetailsState.tall, F.text)
async def func(message: Message, state: FSMContext):
    if is_number(message.text):
        await state.update_data(tall=message.text)
        await state.set_state(UserDetailsState.gender)
        await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç—å', reply_markup=ReplyKb.gender_btn)
    else:
        await message.answer('–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏')


# –º–µ–Ω—é –≤–≤–µ–¥–µ–Ω–Ω—è —Å—Ç–∞—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞_______________________________________________________________________________________
@FSM_user_details.message(UserDetailsState.gender, F.text)
async def func(message: Message, state: FSMContext):
    if message.text in ['üë®‚Äçüíº–ß–æ–ª–æ–≤—ñ–∫', 'üë©‚Äçüíº–ñ—ñ–Ω–∫–∞']:
        await state.update_data(gender=message.text)
        data = await state.get_data()
        await state.clear()
        await message.answer(gh.add_user_details(user_id=message.chat.id, weight=data['weight'], age=data['age'],
                                                 tall=data['tall'], gender=data['gender']),
                             reply_markup=ReplyKb.main_menu)
