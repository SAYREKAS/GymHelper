from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext

from db import db, exercise
from FSM.FSM_Dataclasses import NewExerciseState
from keyboards.reply import ReplyKb, create_reply_kbs

FSM_add_new_exercise = Router()


@FSM_add_new_exercise.message(StateFilter(None), F.text == '–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –≤–ø—Ä–∞–≤—É')
async def func(message: Message, state: FSMContext):
    await state.set_state(NewExerciseState.muscle_group_name)
    await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å –≥—Ä—É–ø—É –º º—è–∑—ñ–≤ –¥–ª—è –Ω–æ–≤–æ—ó –≤–ø—Ä–∞–≤–∏ ',
                         reply_markup=create_reply_kbs(db.get_muscle_groups(), group=3, additional_btn=['üö´–í—ñ–¥–º—ñ–Ω–∏—Ç–∏']))


@FSM_add_new_exercise.message(NewExerciseState.muscle_group_name, F.text)
async def func(message: Message, state: FSMContext):
    await state.update_data(muscle_group_name=message.text)
    await message.answer('–í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –≤–ø—Ä–∞–≤–∏:', reply_markup=ReplyKb.cancel_btn)
    await state.set_state(NewExerciseState.exercise_name)


@FSM_add_new_exercise.message(NewExerciseState.exercise_name, F.text)
async def func(message: Message, state: FSMContext):
    if not exercise.exercise_exists(exercise_name=message.text):
        await state.update_data(exercise_name=message.text)
        data = await state.get_data()
        await message.answer(f"–í–ø—Ä–∞–≤—É {data['exercise_name']} —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!", reply_markup=ReplyKb.main_menu)
        await state.clear()
        exercise.add_user_exercise(user_id=message.chat.id, muscle_group_name=data['muscle_group_name'],
                                   exercise_name=data['exercise_name'])

    else:
        await state.update_data(exercise_name=message.text)
        await message.answer('–¢–∞–∫–∞ –≤–ø—Ä–∞–≤–∞ –≤–∂–µ —ñ—Å–Ω—É—î!', reply_markup=ReplyKb.main_menu)
        await state.clear()
